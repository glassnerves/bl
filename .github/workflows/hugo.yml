 # Sample workflow for building and deploying a page
name: Deploy test

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: windows-latest
    steps:
      - name: Set git to use LF
        run: |
           git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - name: Install deps
        run:  choco install -y wget unzip ruby mingw && gem install asciidoctor --no-document -v 2.0.20 && gem install --no-document rouge asciidoctor-diagram asciidoctor-plantuml asciidoctor-pdf asciidoctor-epub3 && npm install -g vega-lite bytefield-svg
      - name: clone
        shell: pwsh
        run: |
          $gemHome = gem environment home
          $env:ASCIIDOCTORCSSPATH = $gemHome + "/gems/asciidoctor-2.0.20/data/stylesheets/asciidoctor-default.css"
          echo "ASCIIDOCTORCSSPATH=$env:ASCIIDOCTORCSSPATH" >> $GITHUB_ENV && echo $ASCIIDOCTORCSSPATH && git clone https://github.com/glassnerves/blog-machine && wget -c https://github.com/glassnerves/pikchr/releases/download/v1.0.0/pikchr.zip && unzip pikchr.zip && echo $currentDirectory = Get-Location && echo "$env:PATH = $env;$currentDirectory" >> $GITHUB_ENV && wget -O emilua-0.6.0.zip "https://gitlab.com/emilua/emilua/-/package_files/108513562/download" && unzip emilua-0.6.0.zip && ./emilua.exe blog-machine/main.lua
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
